from PIL import Image, ImageDraw
from pystray import Icon, Menu as menu, MenuItem as item
from io import BytesIO
import os
import subprocess
import platform
import base64
import common.utils
from common.config import Config

class Tray():

  def __init__(self, app_name):
    self.app_name = app_name

    self.ALGORITHM_STATE = Config.CURRENT_ALGORITHM

    self.icon = Icon(
        self.app_name,
        icon=self.get_icon(),
        menu=menu(
            item(
                'Show QR code',
                lambda icon: self.onclick_qr()),
            item(
                'Open Results Dir',
                lambda icon: self.onclick_results()),
            menu.SEPARATOR,
            item(
                'Matching Algorithm',
                lambda icon: None,
                enabled=False),
            item(
                'SURF (Precise)',
                self.set_state('SURF'),
                checked=self.get_state('SURF'),
                radio=True),
            item(
                'ORB (Fast)',
                self.set_state('ORB'),
                checked=self.get_state('ORB'),
                radio=True),
            menu.SEPARATOR,
            item(
                'Quit',
                lambda icon: self.onclick_quit())))
  
  def set_state(self, v):
    def inner(icon, item):
      self.ALGORITHM_STATE = v
      print('Switching Algorithm to %s' % self.ALGORITHM_STATE)
      Config.CURRENT_ALGORITHM = self.ALGORITHM_STATE
    return inner

  def get_state(self, v):
    def inner(item):
      return self.ALGORITHM_STATE == v
    return inner

  def get_icon(self):
    return Image.open(BytesIO(base64.b64decode(self.get_branding_datauri())))
  
  def run(self):
    self.icon.run(self.setup)

  def onclick_quit(self):
    self.icon.stop()

  def onclick_qr(self):
    if Config.IS_DIST:
      os.system('show_qr "{}"'.format(Config.SERVICE_URL))
    else:
      if platform.system() == 'Linux':
        os.system('python3 show_qr.py "{}"'.format(Config.SERVICE_URL))
      else:
        proc_result = subprocess.run('show_qr.py "{}"'.format(Config.SERVICE_URL), shell=True)
        if proc_result.returncode != 0:
          proc_result = subprocess.run('show_qr.bat "{}"'.format(Config.SERVICE_URL), shell=True)


  def onclick_results(self):
    if Config.IS_DIST:
      common.utils.open_file_or_dir('./www')
    else:
      common.utils.open_file_or_dir(common.utils.getScriptDir(__file__) + '/../www/results')

  def setup(self, icon):
    self.icon.visible = True


  def get_branding_datauri(self):
    return ''
